# upstream called 'client'
upstream client {
  # refers to a server that is hosted
  # 'server' is a reserved name
  # at domain_name:port
  server client:3000;
}

# server name from services was changed to api
# to avoid possible nginx syntax errors
upstream api {
  # server <name>
  # <name> has to match the name of the service
  # started within docker-compose.yml
  server api:5000;
}

server {
  listen 80;

  # react to a req coming to route '/'
  location / {
    # send traffic to 'client' upstream
    proxy_pass http://client;
    # index index.html index.htm;
    # for react-router to work properly
    # try_files $uri $uri/ /index.html =404;
  }

  # DEV SPECIFIC not necessart in prod
  # but should not hurt
  # allowing the connection for web-sockets
  # at this specific path
  # WebSocket connection to
  # 'ws://localhost:3050/sockjs-node' failed: 
  location /sockjs-node {
    proxy_pass http://client;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }

  location /api {
    # taking out '/api' prefix prepare path
    # for server
    # match with reqex
    # rewrite regex instruction
    # /$1 - output path
    # $1 - represents matched part by (.*) regex
    # break - stops from applying
    # more rewrite rules
    rewrite /api/(.*) /$1 break;
    proxy_pass http://api;
  }
}